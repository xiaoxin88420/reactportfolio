{"version":3,"sources":["pages/Home/pics/modifyport1.jpg","pages/Home/pics/port2.jpg","pages/Home/pics/port3.jpg","pages/Portfolio/pics/firstproject.jpg","pages/Portfolio/pics/secondproject.jpg","pages/Portfolio/pics/e-da-burger.jpg","pages/Portfolio/pics/weatherapp.jpg","pages/Portfolio/pics/work-day-scheduler.jpg","pages/Portfolio/pics/psgen.jpg","pages/Contact/pics/aboutme.jpg","pages/Home/Home.js","Components/Project/Project.js","pages/Portfolio/Portfolio.js","pages/Contact/Contact.js","Components/Header/Header.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","Row","Col","Card","CardImg","top","width","src","modifyport1","alt","CardBody","CardTitle","CardText","Button","port2","port3","href","target","Project","props","project","img","title","CardSubtitle","subtitle","text","link","Portfolio","NutraPrep","RanchHand","EDaBurger","weatherApp","workdayScheduler","psgen","Contact","aboutme","Header","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","to","exact","path","component","Footer","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,+UC0D5BC,EAzCF,WACX,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKC,IAAaC,IAAI,mBAChD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,sGACA,kBAACC,EAAA,EAAD,oBAIN,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKO,IAAOL,IAAI,mBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,yGACA,kBAACC,EAAA,EAAD,oBAIN,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKQ,IAAON,IAAI,mBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,+EACA,kBAACC,EAAA,EAAD,CAAQG,KAAK,6BAA6BC,OAAO,UAAjD,mB,QCnBDC,EAlBC,SAAAC,GACd,OACE,oCAEE,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKY,EAAMC,QAAQC,IAAKZ,IAAKU,EAAMC,QAAQE,QACrE,kBAACZ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYQ,EAAMC,QAAQE,OAC1B,kBAACC,EAAA,EAAD,KAAeJ,EAAMC,QAAQI,UAC7B,kBAACZ,EAAA,EAAD,KAAWO,EAAMC,QAAQK,MACzB,kBAACZ,EAAA,EAAD,KAAQ,uBAAGG,KAAMG,EAAMC,QAAQM,MAAOP,EAAMC,QAAQE,Y,sGC4E/CK,EAnFG,WAEhB,IAAIP,EAAU,CACZ,CACEE,MAAO,YACPE,SAAU,gBACVC,KAAM,oHACNJ,IAAKO,IACLF,KAAK,qDAEP,CACEJ,MAAO,aACPE,SAAU,iBACVC,KAAM,sKACNJ,IAAKQ,IACLH,KAAK,uDAEP,CACEJ,MAAO,cACPE,SAAU,WACVC,KAAM,2GACNJ,IAAKS,IACLJ,KAAM,sCAER,CACEJ,MAAO,aACPE,SAAU,WACVC,KAAM,wFACNJ,IAAKU,IACLL,KAAM,sCAER,CACEJ,MAAO,oBACPE,SAAU,WACVC,KAAM,iGACNJ,IAAKW,IACLN,KAAM,iDAER,CACEJ,MAAO,qBACPE,SAAU,WACVC,KAAM,qEACNJ,IAAKY,IACLP,KAAM,gDAQV,OACE,oCACE,kBAAC1B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,MAE5B,kBAAClB,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,OAG9B,6BACA,kBAACnB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,MAE5B,kBAAClB,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,MAE5B,kBAAClB,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,MAE5B,kBAAClB,EAAA,EAAD,KACE,kBAAC,EAAD,CAASkB,QAASA,EAAQ,OAG9B,gC,yBC/COc,EA5BC,WACd,OACE,oCACA,kBAAClC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAK4B,IAAS1B,IAAI,aAC5C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,kIAC4H,6BAAK,6BADjI,YAGA,6BACA,kBAACA,EAAA,EAAD,uCACmC,6BADnC,qBAC0D,6BAAK,6BAD/D,0EAQV,6BACA,+B,wDCkBWwB,EApCA,WAAO,IAAD,EAESC,oBAAS,GAFlB,mBAEZC,EAFY,KAEJC,EAFI,KAMnB,OACE,kBAAC,IAAD,KACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,OAAK,EAACC,OAAO,MACnC,kBAACC,EAAA,EAAD,CAAa5B,KAAK,KAAlB,UACA,kBAAC6B,EAAA,EAAD,CAAeC,QAPR,kBAAMP,GAAWD,MAQxB,kBAACS,EAAA,EAAD,CAAUT,OAAQA,EAAQU,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC7B,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,cAAT,eAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,YAAT,gBAKjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACjC,kBAAC,IAAD,CAAOwD,KAAK,aAAaC,UAAW7B,IACpC,kBAAC,IAAD,CAAO4B,KAAK,WAAWC,UAAWtB,QCrC7BuB,G,MAVA,WACb,OACE,4BAAQC,GAAG,UAAX,gBACe,uBAAG1C,KAAK,yCAAyCC,OAAO,UAAxD,YADf,KAC8F,uBAC1FD,KAAK,kCAAkCC,OAAO,UAD4C,aAD9F,KAE0E,uBACpED,KAAK,oDAAoDC,OAAO,UADI,YAF1E,OCUW0C,EAVH,WAEV,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.36b62edf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/modifyport1.35b0ea5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/port2.a6ebc856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/port3.8263d45a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/firstproject.9bbc30c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/secondproject.ae40d4f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/e-da-burger.166d6653.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weatherapp.a1b32b88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/work-day-scheduler.03e1c009.jpg\";","module.exports = __webpack_public_path__ + \"static/media/psgen.80e3340d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aboutme.22936601.jpg\";","import React from 'react'\r\nimport modifyport1 from './pics/modifyport1.jpg'\r\nimport port2 from './pics/port2.jpg'\r\nimport port3 from './pics/port3.jpg'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardImg top width=\"100%\" src={modifyport1} alt=\"Card image cap\" />\r\n              <CardBody>\r\n                <CardTitle>My family</CardTitle>\r\n                <CardText>I believe Legoland is the place I've been to most of the time since my son loves going there.</CardText>\r\n                <Button>No where</Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <CardImg top width=\"100%\" src={port2} alt=\"Card image cap\" />\r\n              <CardBody>\r\n                <CardTitle>Milestone</CardTitle>\r\n                <CardText>Very precious photo with my previous CEO. This is a significant milestone of my lifelong career.</CardText>\r\n                <Button>No where</Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <CardImg top width=\"100%\" src={port3} alt=\"Card image cap\" />\r\n              <CardBody>\r\n                <CardTitle>New Journey</CardTitle>\r\n                <CardText>I decided to work on my own and catch the best opportunity of my life.</CardText>\r\n                <Button href='https://www.jeansonher.com' target='_blank'>My Store</Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n} from 'reactstrap'\r\n\r\nconst Project = props => {\r\n  return (\r\n    <>\r\n\r\n      <Card>\r\n        <CardImg top width=\"100%\" src={props.project.img} alt={props.project.title} />\r\n        <CardBody>\r\n          <CardTitle>{props.project.title}</CardTitle>\r\n          <CardSubtitle>{props.project.subtitle}</CardSubtitle>\r\n          <CardText>{props.project.text}</CardText>\r\n          <Button><a href={props.project.link}>{props.project.title}</a></Button>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Project","import React from 'react'\r\nimport Project from '../../Components/Project'\r\nimport NutraPrep from './pics/firstproject.jpg'\r\nimport RanchHand from './pics/secondproject.jpg'\r\nimport EDaBurger from './pics/e-da-burger.jpg'\r\nimport weatherApp from './pics/weatherapp.jpg'\r\nimport workdayScheduler from './pics/work-day-scheduler.jpg'\r\nimport psgen from './pics/psgen.jpg'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\n\r\nconst Portfolio = () => {\r\n\r\n  let project = [\r\n    {\r\n      title: 'NutraPrep',\r\n      subtitle: 'First Project',\r\n      text: 'This is my first group project of using third party API to retrieve nutricious recipe when searching by keywords.',\r\n      img: NutraPrep,\r\n      link:'https://nicholasd-uci.github.io/manhattanProject/'\r\n    },\r\n    {\r\n      title: 'Ranch-Hand',\r\n      subtitle: 'Second Project',\r\n      text: \"This is my second group project of building up our own database by using MySQL as well as setting up routers to practice 'GET', 'POST', 'PUT' and 'DELETE' on data.\",\r\n      img: RanchHand,\r\n      link:'https://gentle-taiga-08855.herokuapp.com/index.html'\r\n    },\r\n    {\r\n      title: 'E-Da-Burger',\r\n      subtitle: 'Homework',\r\n      text: \"This is a piece of homework to practice building up a local data and maintain it by using 'CRUD' method.\",\r\n      img: EDaBurger,\r\n      link: 'https://e-da-burger.herokuapp.com/'\r\n    },\r\n    {\r\n      title: 'WeatherApp',\r\n      subtitle: 'Homework',\r\n      text: 'This is an app that could post the weather for the future five days of a chosen city.',\r\n      img: weatherApp,\r\n      link: 'https://e-da-burger.herokuapp.com/'\r\n    },\r\n    {\r\n      title: 'Workday Scheduler',\r\n      subtitle: 'Homework',\r\n      text: 'This is an app that can save your input event and the color will change by time as a reminder.',\r\n      img: workdayScheduler,\r\n      link: 'https://xiaoxin88420.github.io/WorkScheduler/'\r\n    },\r\n    {\r\n      title: 'Password Generator',\r\n      subtitle: 'Homework',\r\n      text: \"This is an interactive password generator. It's fun to try it out.\",\r\n      img: psgen,\r\n      link: 'https://xiaoxin88420.github.io/pwgenerator/'\r\n    },\r\n  \r\n  \r\n  ]\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Project project={project[0]} />\r\n          </Col>\r\n          <Col>\r\n            <Project project={project[1]} />\r\n          </Col>\r\n        </Row>\r\n        <hr/>\r\n        <Row>\r\n          <Col>\r\n            <Project project={project[2]} />\r\n          </Col>\r\n          <Col>\r\n            <Project project={project[3]} />\r\n          </Col>\r\n          <Col>\r\n            <Project project={project[4]} />\r\n          </Col>\r\n          <Col>\r\n            <Project project={project[5]} />\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Portfolio","import React from 'react'\r\nimport './Contact.css'\r\nimport aboutme from './pics/aboutme.jpg'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardImg top width=\"100%\" src={aboutme} alt=\"About Me\" />\r\n            <CardBody>\r\n              <CardTitle>About Me</CardTitle>\r\n              <CardText>\r\n                Hi, welcome to Max's Hub. Unfortunately I'm not available right now. Please feel free to leave a message after the 'beep'.<br/><br/> \"Beep!\"\r\n              </CardText>\r\n              <hr/>\r\n              <CardText>\r\n                  Email: xiaoxin88420@hotmail.com<br/>Cell: 717-880-9938<br/><br/>More social media links at the footer.Please feel free to hop in.\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    <br/>\r\n    <br/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact","import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport Home from '../../pages/Home'\r\nimport Portfolio from '../../pages/Portfolio'\r\nimport Contact from '../../pages/Contact'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Dropdown,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap'\r\n\r\nconst Header = () => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar color=\"skyblue\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">MaxHub</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink><Link to='/'>Home</Link></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><Link to='/portfolio'>Portfolio</Link></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><Link to='/contact'>Contact</Link></NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/portfolio' component={Portfolio} />\r\n          <Route path='/contact' component={Contact} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      Follow me on <a href=\"https://www.facebook.com/haojun.yang.5\" target=\"_blank\">Facebook</a>, <a\r\n        href=\"https://github.com/xiaoxin88420\" target=\"_blank\">My GitHub</a>, <a\r\n          href=\"https://www.linkedin.com/in/haojun-yang-9a8b03b1/\" target=\"_blank\">LinkedIn</a>.\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, {useState} from 'react'\nimport './App.css'\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\n\nconst App = () => {\n\n  return(\n    <div>\n      <Header />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}